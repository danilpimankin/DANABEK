/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyToken, MyTokenInterface } from "../MyToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d5938038062000d598339810160408190526200003491620001e2565b6000620000428382620002db565b506001620000518282620002db565b506002805460ff19166012179055600480546001600160a01b031916339081179091556200008890678ac7230489e8000062000090565b5050620003cf565b8060036000828254620000a49190620003a7565b90915550506001600160a01b03821660009081526005602052604081208054839290620000d3908490620003a7565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200014557600080fd5b81516001600160401b03808211156200016257620001626200011d565b604051601f8301601f19908116603f011681019082821181831017156200018d576200018d6200011d565b81604052838152602092508683858801011115620001aa57600080fd5b600091505b83821015620001ce5785820183015181830184015290820190620001af565b600093810190920192909252949350505050565b60008060408385031215620001f657600080fd5b82516001600160401b03808211156200020e57600080fd5b6200021c8683870162000133565b935060208501519150808211156200023357600080fd5b50620002428582860162000133565b9150509250929050565b600181811c908216806200026157607f821691505b6020821081036200028257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002d657600081815260208120601f850160051c81016020861015620002b15750805b601f850160051c820191505b81811015620002d257828155600101620002bd565b5050505b505050565b81516001600160401b03811115620002f757620002f76200011d565b6200030f816200030884546200024c565b8462000288565b602080601f8311600181146200034757600084156200032e5750858301515b600019600386901b1c1916600185901b178555620002d2565b600085815260208120601f198616915b82811015620003785788860151825594840194600190910190840162000357565b5085821015620003975787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620003c957634e487b7160e01b600052601160045260246000fd5b92915050565b61097a80620003df6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806342966c681161008157806395d89b411161005b57806395d89b41146101df578063a9059cbb146101e7578063dd62ed3e146101fa57600080fd5b806342966c681461017857806370a082311461018b5780638da5cb5b146101b457600080fd5b806323b872dd116100b257806323b872dd14610131578063313ce5671461014457806340c10f191461016357600080fd5b806306fdde03146100d9578063095ea7b3146100f757806318160ddd1461011a575b600080fd5b6100e1610233565b6040516100ee91906107b9565b60405180910390f35b61010a610105366004610823565b6102c1565b60405190151581526020016100ee565b61012360035481565b6040519081526020016100ee565b61010a61013f36600461084d565b61032e565b6002546101519060ff1681565b60405160ff90911681526020016100ee565b610176610171366004610823565b6104f9565b005b610176610186366004610889565b610561565b6101236101993660046108a2565b6001600160a01b031660009081526005602052604090205490565b6004546101c7906001600160a01b031681565b6040516001600160a01b0390911681526020016100ee565b6100e1610636565b61010a6101f5366004610823565b610643565b6101236102083660046108c4565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b60008054610240906108f7565b80601f016020809104026020016040519081016040528092919081815260200182805461026c906108f7565b80156102b95780601f1061028e576101008083540402835291602001916102b9565b820191906000526020600020905b81548152906001019060200180831161029c57829003601f168201915b505050505081565b3360008181526006602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061031c9086815260200190565b60405180910390a35060015b92915050565b6001600160a01b03831660009081526005602052604081205482111561039b5760405162461bcd60e51b815260206004820152601d60248201527f4d79546f6b656e3a20496e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b6001600160a01b038416600090815260066020908152604080832033845290915290205482111561040e5760405162461bcd60e51b815260206004820152601f60248201527f4d79546f6b656e3a20496e73756666696369656e7420616c6c6f77616e6365006044820152606401610392565b6001600160a01b03841660009081526005602052604081208054849290610436908490610947565b90915550506001600160a01b0383166000908152600560205260408120805484929061046390849061095a565b90915550506001600160a01b03841660009081526006602090815260408083203384529091528120805484929061049b908490610947565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516104e791815260200190565b60405180910390a35060019392505050565b6004546001600160a01b031633146105535760405162461bcd60e51b815260206004820152601d60248201527f4d79546f6b656e3a20796f7520617265206e6f7420616e206f776e65720000006044820152606401610392565b61055d8282610730565b5050565b336000908152600560205260409020548111156105c05760405162461bcd60e51b815260206004820152601d60248201527f4d79546f6b656e3a20496e73756666696369656e742062616c616e63650000006044820152606401610392565b80600360008282546105d29190610947565b909155505033600090815260056020526040812080548392906105f6908490610947565b909155505060405181815260009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350565b60018054610240906108f7565b336000908152600560205260408120548211156106a25760405162461bcd60e51b815260206004820152601b60248201527f4d79546f6b656e3a204e6f7420656e6f7567682062616c616e636500000000006044820152606401610392565b33600090815260056020526040812080548492906106c1908490610947565b90915550506001600160a01b038316600090815260056020526040812080548492906106ee90849061095a565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161031c565b8060036000828254610742919061095a565b90915550506001600160a01b0382166000908152600560205260408120805483929061076f90849061095a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b818110156107e6578581018301518582016040015282016107ca565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461081e57600080fd5b919050565b6000806040838503121561083657600080fd5b61083f83610807565b946020939093013593505050565b60008060006060848603121561086257600080fd5b61086b84610807565b925061087960208501610807565b9150604084013590509250925092565b60006020828403121561089b57600080fd5b5035919050565b6000602082840312156108b457600080fd5b6108bd82610807565b9392505050565b600080604083850312156108d757600080fd5b6108e083610807565b91506108ee60208401610807565b90509250929050565b600181811c9082168061090b57607f821691505b60208210810361092b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561032857610328610931565b808201808211156103285761032861093156fea164736f6c6343000812000a";

export class MyToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyToken> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<MyToken>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): MyToken {
    return super.attach(address) as MyToken;
  }
  connect(signer: Signer): MyToken__factory {
    return super.connect(signer) as MyToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new utils.Interface(_abi) as MyTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyToken {
    return new Contract(address, _abi, signerOrProvider) as MyToken;
  }
}
