/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AddLiquidity, AddLiquidityInterface } from "../AddLiquidity";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_uniswapRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniswapFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "LPpair",
        type: "address",
      },
    ],
    name: "AddedLiquidity",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountB",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161059238038061059283398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b6104d4806100be6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063c45a015514610046578063cf6c62ea14610075578063f887ea401461008a575b600080fd5b600154610059906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61008861008336600461040d565b61009d565b005b600054610059906001600160a01b031681565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038516906323b872dd906064016020604051808303816000875af11580156100f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101149190610453565b506040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038416906323b872dd906064016020604051808303816000875af1158015610168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018c9190610453565b5060005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018490529085169063095ea7b3906044016020604051808303816000875af11580156101e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102049190610453565b5060005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529084169063095ea7b3906044016020604051808303816000875af1158015610258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027c9190610453565b5060005460405162e8e33760e81b81526001600160a01b0386811660048301528581166024830152604482018590526064820184905260016084830181905260a48301523360c48301524260e48301529091169063e8e3370090610104016060604051808303816000875af11580156102f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031d919061047c565b505060015460405163e6a4390560e01b81526001600160a01b0387811660048301528681166024830152600093509091169063e6a4390590604401602060405180830381865afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039991906104aa565b604080516001600160a01b038881168252878116602083015233828401528316606082015290519192507ff2d2d3ac7b4bb39fea6e415bdc21d71c1308a4d7e721f9a8465c8fb8f7d50798919081900360800190a15050505050565b6001600160a01b038116811461040a57600080fd5b50565b6000806000806080858703121561042357600080fd5b843561042e816103f5565b9350602085013561043e816103f5565b93969395505050506040820135916060013590565b60006020828403121561046557600080fd5b8151801515811461047557600080fd5b9392505050565b60008060006060848603121561049157600080fd5b8351925060208401519150604084015190509250925092565b6000602082840312156104bc57600080fd5b8151610475816103f556fea164736f6c6343000812000a";

export class AddLiquidity__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _uniswapRouter: string,
    _uniswapFactory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AddLiquidity> {
    return super.deploy(
      _uniswapRouter,
      _uniswapFactory,
      overrides || {}
    ) as Promise<AddLiquidity>;
  }
  getDeployTransaction(
    _uniswapRouter: string,
    _uniswapFactory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _uniswapRouter,
      _uniswapFactory,
      overrides || {}
    );
  }
  attach(address: string): AddLiquidity {
    return super.attach(address) as AddLiquidity;
  }
  connect(signer: Signer): AddLiquidity__factory {
    return super.connect(signer) as AddLiquidity__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddLiquidityInterface {
    return new utils.Interface(_abi) as AddLiquidityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddLiquidity {
    return new Contract(address, _abi, signerOrProvider) as AddLiquidity;
  }
}
